## $Id$
## CDSware User account information.

## This file is part of the CERN Document Server Software (CDSware).
## Copyright (C) 2002 CERN.
##
## The CDSware is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation; either version 2 of the
## License, or (at your option) any later version.
##
## The CDSware is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.  
##
## You should have received a copy of the GNU General Public License
## along with CDSware; if not, write to the Free Software Foundation, Inc.,
## 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

## $Id$
## DO NOT EDIT THIS FILE!  IT WAS AUTOMATICALLY GENERATED FROM CDSware WML SOURCES.

## read config variables:
#include "config.wml"
#include "configbis.wml"

## fill config variables:
pylibdir = "<LIBDIR>/python"

try:
    import sys
    sys.path.append('%s' % pylibdir)
    from cdsware import webuser
    from cdsware.config import *
    from cdsware.webpage import page
    from cdsware import webaccount
except ImportError, e:
    print "Error: %s" % e
    import sys
    sys.exit(1)

def display(req):
    uid = webuser.getUid(req)
    return page("Your Account", webaccount.perform_display(req),
                """&gt;""",
                "", "CDS Personalize, Main page", "CDS, personalize", webuser.create_user_infobox(uid), "")
def set(req):
    uid = webuser.getUid(req)
    data = webuser.getDataUid(req,uid)
    email = data[0]
    passw = data[1]
    return page("Your Settings", webaccount.perform_set(email,passw),
                """&gt; <a class="navtrail" href="%s/youraccount.py/display">Your Account</a> &gt;""" % weburl,                
                "", "CDS Personalize, Your Settings", "CDS, personalize", webuser.create_user_infobox(uid), "")

def change(req,email=None,password=None):
    uid = webuser.getUid(req)
    if webuser.checkemail(email):
        
        change = webuser.updateDataUser(req,uid,email,password)
        return display(req)
    else :
        return display(req)

def delete(req):
    return page("Delete Account", webaccount.perform_delete(),
                """&gt; <a class="navtrail" href="%s/youraccount.py/display">Your Account</a> &gt;""" % weburl,                
                "","CDS Personalize, Main page", "CDS, personalize",
                webuser.create_user_infobox(uid), "")

def logout(req):
    
    uid = webuser.getUid(req)
    webuser.logoutUser(req,uid)
    return page("Logout", webaccount.perform_logout(req),
                """&gt; <a class="navtrail" href="%s/youraccount.py/display">Your Account</a> &gt;""" % weburl,                
                "","CDS Personalize, Main page", "CDS, personalize",
                webuser.create_user_infobox(uid), "")
    
def login(req,p_email=None,p_pw=None,action='login'):

    uid = webuser.getUid(req)
    if action =='login':
        
       if p_email==None:
           return  page("Login", webaccount.perform_ask(),
                        """&gt; <a class="navtrail" href="%s/youraccount.py/display">Your Account</a> &gt;""" % weburl,
                        "", "CDS Personalize, Main page", "CDS, personalize", webuser.create_user_infobox(uid), "")
       iden = webuser.loginUser(p_email,p_pw)
    
       if len(iden)>0:
           webuser.update_Uid(req,p_email,p_pw,uid)
           return  page("Login", webaccount.perform_display(req),
                        """&gt; <a class="navtrail" href="%s/youraccount.py/display">Your Account</a> &gt;""" % weburl,
                        "","CDS Personalize, Main page", "CDS, personalize",webuser.create_user_infobox(uid), "")
       else:
        
           return page("Your Account", perform_display(req),"&gt;",
                       "", "CDS Personalize, Main page", "CDS, personalize", webuser.create_user_infobox(uid), "")
    if action == 'register':
        
        if webuser.registerUser(req,p_email,p_pw):
            webuser.update_Uid(req,p_email,p_pw,uid)
        
    return  page("Your Account", webaccount.perform_display(req), "&gt;",
                 "","CDS Personalize, Main page", "CDS, personalize",webuser.create_user_infobox(uid),"")
